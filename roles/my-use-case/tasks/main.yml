---

- name: Fix Gitlab Installer Timeout
  ansible.builtin.command: 'sed -i "s/15m/59m/g" /home/{{ ace_box_user }}/.ansible/collections/ansible_collections/ace_box/ace_box/roles/gitlab/tasks/main.yml'

- name: Create Issue Script
  copy:
    mode: +x
    dest: "/home/{{ ace_box_user }}/start_issue.sh"
    content: |
      #!/bin/sh
      microk8s kubectl patch deployment unguard-user-auth-service -n unguard -p '{"spec":{"template":{"spec":{"containers":[{"name":"user-auth-service","image":"europe-west4-docker.pkg.dev/acetaskforceemea/newregistry/user-auth-service-innovate:1.0.16"}]}}}}'

- name: Resolve Issue Script
  copy:
    mode: +x
    dest: "/home/{{ ace_box_user }}/resolve_issue.sh"
    content: |
      #!/bin/sh
      microk8s kubectl patch deployment unguard-user-auth-service -n unguard -p '{"spec":{"template":{"spec":{"containers":[{"name":"user-auth-service","image":"dynatraceace/unguard-user-auth-service:0.6.2"}]}}}}'

#Generate OAuth Token
- block:
    - name: Request a DT OAuth access token
      ansible.builtin.uri:
        url: "{{ extra_vars.dt_oauth_sso_endpoint }}"
        method: POST
        status_code: 200
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body_format: form-urlencoded
        body:
          grant_type: "client_credentials"
          client_id: "{{ extra_vars.dt_oauth_client_id }}"
          client_secret: "{{ extra_vars.dt_oauth_client_secret }}"
          scope: "openpipeline:configurations:write openpipeline:configurations:read app-engine:apps:install app-engine:apps:run hub:catalog:read"
          resource: "{{ extra_vars.dt_oauth_account_urn }}"
      register: auth_response_raw
    - set_fact:
        dt_oauth_access_token: "{{ auth_response_raw.json.access_token }}"
- set_fact:
    role_path_abs: "{{ role_path }}"

- name: "Apply OpenPipeline Configuration"
  ansible.builtin.command: 'curl -X PUT "{{ extra_vars.dt_environment_url_gen3 }}/platform/openpipeline/v1/configurations/logs"  --header "Content-Type: application/json; charset=utf-8" --header "Authorization: Bearer {{ dt_oauth_access_token }}" --data "@{{ role_path_abs }}/files/openpipeline/config.json" '
  register: post_result

- name: Print return information from the previous task result
  ansible.builtin.debug:
    var: post_result

- name: Print return information from the previous task
  ansible.builtin.debug:
    var: post_result.status

- name: "Install app {{ item.dt_app_id }}"
  ansible.builtin.uri:
    url: "{{ extra_vars.dt_environment_url_gen3.rstrip('/') }}/platform/app-engine/registry/v1/apps/{{ item.dt_app_id }}:install-bundle"
    method: POST
    status_code: 202
    headers:
      Authorization: "Bearer {{ dt_oauth_access_token }}"
  loop:
    - dt_app_id: "dynatrace.gitlab.connector"
      dt_app_version: "1.0.0"
    - dt_app_id: "dynatrace.davis.problems"
      dt_app_Version: "1.3.1"

- include_role:
    name: gitlab
  vars:
    gitlab_helm_chart_version: "v7.10.0"

- name: Gitlab - Ensure Group
  include_role:
    name: gitlab
    tasks_from: ensure-group
  vars:
    gitlab_group_name: "{{ gitlab_group }}"

- name: Gitlab - Ensure Default Group Vars
  include_role:
    name: gitlab
    tasks_from: ensure-default-group-vars
  vars:
    gitlab_group_name: "{{ gitlab_group }}"

- name: Gitlab - Ensure Project
  include_role:
    name: gitlab
    tasks_from: ensure-project
  vars:
    gitlab_prj: "{{ gitlab_repo_name }}"
    gitlab_prj_namespace_id: "{{ gitlab_group_id }}"

- name: Source Gitlab endpoint
  include_role:
    name: gitlab
    tasks_from: source-endpoints

- name: Source Gitlab Secrets
  include_role:
    name: gitlab
    tasks_from: source-secret
  when: gitlab_personal_access_token is not defined

- name: Print return information from the previous task result
  ansible.builtin.debug:
    var: gitlab_personal_access_token

- set_fact:
    dt_hot_gitlab_repo_src: "{{ role_path }}/files/repos/hot/logs-in-context"

- name: Publish repo
  include_role:
    name: repository
  vars:
    git_username: "root"
    git_password: "{{ gitlab_password }}"
    git_domain: "{{ gitlab_domain }}"
    git_remote: "gitlab"
    git_org: "{{ gitlab_group }}"
    git_repo: "{{ gitlab_repo_name }}"
    repo_src: "{{ dt_hot_gitlab_repo_src }}"
    track_upstream: true

- set_fact:
    dt_hot_gitlab_docs_src: "{{ role_path }}/files/docs"

- name: Publish docs
  include_role:
    name: repository
  vars:
    git_username: "root"
    git_password: "{{ gitlab_password }}"
    git_domain: "{{ gitlab_domain }}"
    git_remote: "gitlab"
    git_org: "{{ gitlab_group }}"
    git_repo: "docs"
    repo_src: "{{ dt_hot_gitlab_docs_src }}"
    track_upstream: true

- include_role:
    name: monaco-v2

- name: Monaco - Deploy Allowlist
  include_role:
    name: monaco-v2
    tasks_from: apply-monaco
  vars:
    monaco_manifest_path: "{{ role_path_abs }}/files/monaco/manifest.yaml"
    monaco_project: "global"
    monaco_environment:
      DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3 }}"
      DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id }}"
      DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret }}"
      DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint.rstrip('/') }}"
      DT_TENANT: "{{ dynatrace_tenant_url }}"
      DT_API_TOKEN: "{{ dynatrace_api_token }}"
      GITLAB_URL: "{{ gitlab_external_endpoint }}"
      GITLAB_PAT_TOKEN: "{{ gitlab_personal_access_token  }}"

- name: Monaco - Deploy Workflows
  include_role:
    name: monaco-v2
    tasks_from: apply-monaco
  vars:
    monaco_manifest_path: "{{ role_path_abs }}/files/monaco/manifest.yaml"
    monaco_project: "workflows"
    monaco_environment:
      WORKFLOW_ACTOR_ID: "{{ extra_vars.workflow_actor_id }}"
      DT_PLATFORM_TENANT_URL: "{{ extra_vars.dt_environment_url_gen3 }}"
      DT_OAUTH_CLIENT_ID: "{{ extra_vars.dt_oauth_client_id }}"
      DT_OAUTH_CLIENT_SECRET: "{{ extra_vars.dt_oauth_client_secret }}"
      DT_OAUTH_SSO_ENDPOINT: "{{ extra_vars.dt_oauth_sso_endpoint.rstrip('/') }}"
      DT_TENANT: "{{ dynatrace_tenant_url }}"
      DT_API_TOKEN: "{{ dynatrace_api_token }}"

- include_role:
    name: microk8s

- include_role:
    name: dt-operator

- include_role:
    name: monaco-v2
  vars:
    monaco_version: "v{{ monacoVersion }}"
    
- include_role:
    name: app-easytrade

- include_role:
    name: app-unguard

# - set_fact:
#     include_dashboard_value_file: "{{ role_path }}/templates/apps-dashboard.yml.j2"

# - include_role:
#     name: dashboard
#     tasks_from: template-values-file

- include_role:
    name: dashboard
